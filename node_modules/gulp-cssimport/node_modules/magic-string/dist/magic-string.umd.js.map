{"version":3,"file":"magic-string.umd.js","sources":["../src/Patch.js","../src/utils/btoa.js","../src/utils/SourceMap.js","../src/utils/guessIndent.js","../node_modules/vlq/src/vlq.js","../src/utils/encodeMappings.js","../src/utils/getRelativePath.js","../src/utils/isObject.js","../src/MagicString.js","../src/utils/hasOwnProp.js","../src/Bundle.js","../src/index.js"],"sourcesContent":["export default function Patch ( start, end, content, original, storeName ) {\n\tthis.start = start;\n\tthis.end = end;\n\tthis.content = content;\n\tthis.original = original;\n\tthis.storeName = storeName;\n}\n\nPatch.prototype = {\n\tclone () {\n\t\treturn new Patch( this.start, this.end, this.content, this.original, this.storeName );\n\t}\n};\n","let _btoa;\n\nif ( typeof window !== 'undefined' && typeof window.btoa === 'function' ) {\n\t_btoa = window.btoa;\n} else if ( typeof Buffer === 'function' ) {\n\t/* global Buffer */\n\t_btoa = str => new Buffer( str ).toString( 'base64' );\n} else {\n\tthrow new Error( 'Unsupported environment: `window.btoa` or `Buffer` should be supported.' );\n}\n\nexport default _btoa;\n","import btoa from './btoa.js';\n\nexport default function SourceMap ( properties ) {\n\tthis.version = 3;\n\n\tthis.file           = properties.file;\n\tthis.sources        = properties.sources;\n\tthis.sourcesContent = properties.sourcesContent;\n\tthis.names          = properties.names;\n\tthis.mappings       = properties.mappings;\n}\n\nSourceMap.prototype = {\n\ttoString () {\n\t\treturn JSON.stringify( this );\n\t},\n\n\ttoUrl () {\n\t\treturn 'data:application/json;charset=utf-8;base64,' + btoa( this.toString() );\n\t}\n};\n","export default function guessIndent ( code ) {\n\tconst lines = code.split( '\\n' );\n\n\tconst tabbed = lines.filter( line => /^\\t+/.test( line ) );\n\tconst spaced = lines.filter( line => /^ {2,}/.test( line ) );\n\n\tif ( tabbed.length === 0 && spaced.length === 0 ) {\n\t\treturn null;\n\t}\n\n\t// More lines tabbed than spaced? Assume tabs, and\n\t// default to tabs in the case of a tie (or nothing\n\t// to go on)\n\tif ( tabbed.length >= spaced.length ) {\n\t\treturn '\\t';\n\t}\n\n\t// Otherwise, we need to guess the multiple\n\tconst min = spaced.reduce( ( previous, current ) => {\n\t\tconst numSpaces = /^ +/.exec( current )[0].length;\n\t\treturn Math.min( numSpaces, previous );\n\t}, Infinity );\n\n\treturn new Array( min + 1 ).join( ' ' );\n}\n","var charToInteger = {};\nvar integerToChar = {};\n\n'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='.split( '' ).forEach( function ( char, i ) {\n\tcharToInteger[ char ] = i;\n\tintegerToChar[ i ] = char;\n});\n\nexport function decode ( string ) {\n\tvar result = [],\n\t\tlen = string.length,\n\t\ti,\n\t\thasContinuationBit,\n\t\tshift = 0,\n\t\tvalue = 0,\n\t\tinteger,\n\t\tshouldNegate;\n\n\tfor ( i = 0; i < len; i += 1 ) {\n\t\tinteger = charToInteger[ string[i] ];\n\n\t\tif ( integer === undefined ) {\n\t\t\tthrow new Error( 'Invalid character (' + string[i] + ')' );\n\t\t}\n\n\t\thasContinuationBit = integer & 32;\n\n\t\tinteger &= 31;\n\t\tvalue += integer << shift;\n\n\t\tif ( hasContinuationBit ) {\n\t\t\tshift += 5;\n\t\t} else {\n\t\t\tshouldNegate = value & 1;\n\t\t\tvalue >>= 1;\n\n\t\t\tresult.push( shouldNegate ? -value : value );\n\n\t\t\t// reset\n\t\t\tvalue = shift = 0;\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function encode ( value ) {\n\tvar result, i;\n\n\tif ( typeof value === 'number' ) {\n\t\tresult = encodeInteger( value );\n\t} else {\n\t\tresult = '';\n\t\tfor ( i = 0; i < value.length; i += 1 ) {\n\t\t\tresult += encodeInteger( value[i] );\n\t\t}\n\t}\n\n\treturn result;\n}\n\nfunction encodeInteger ( num ) {\n\tvar result = '', clamped;\n\n\tif ( num < 0 ) {\n\t\tnum = ( -num << 1 ) | 1;\n\t} else {\n\t\tnum <<= 1;\n\t}\n\n\tdo {\n\t\tclamped = num & 31;\n\t\tnum >>= 5;\n\n\t\tif ( num > 0 ) {\n\t\t\tclamped |= 32;\n\t\t}\n\n\t\tresult += integerToChar[ clamped ];\n\t} while ( num > 0 );\n\n\treturn result;\n}\n","import { encode } from 'vlq';\n\nexport default function encodeMappings ( original, intro, patches, hires, sourcemapLocations, sourceIndex, offsets, names ) {\n\tlet rawLines = [];\n\n\tlet generatedCodeLine = intro.split( '\\n' ).length - 1;\n\tlet rawSegments = rawLines[ generatedCodeLine ] = [];\n\n\tlet originalCharIndex = 0;\n\n\tlet generatedCodeColumn = 0;\n\tlet sourceCodeLine = 0;\n\tlet sourceCodeColumn = 0;\n\n\tfunction addSegmentsUntil ( end ) {\n\t\tlet first = true;\n\n\t\twhile ( originalCharIndex < end ) {\n\t\t\tif ( hires || first || sourcemapLocations[ originalCharIndex ] ) {\n\t\t\t\trawSegments.push({\n\t\t\t\t\tgeneratedCodeLine,\n\t\t\t\t\tgeneratedCodeColumn,\n\t\t\t\t\tsourceCodeLine,\n\t\t\t\t\tsourceCodeColumn,\n\t\t\t\t\tsourceCodeName: -1,\n\t\t\t\t\tsourceIndex\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif ( original[ originalCharIndex ] === '\\n' ) {\n\t\t\t\tsourceCodeLine += 1;\n\t\t\t\tsourceCodeColumn = 0;\n\t\t\t\tgeneratedCodeLine += 1;\n\t\t\t\trawLines[ generatedCodeLine ] = rawSegments = [];\n\t\t\t\tgeneratedCodeColumn = 0;\n\t\t\t} else {\n\t\t\t\tsourceCodeColumn += 1;\n\t\t\t\tgeneratedCodeColumn += 1;\n\t\t\t}\n\n\t\t\toriginalCharIndex += 1;\n\t\t\tfirst = false;\n\t\t}\n\t}\n\n\tfor ( let i = 0; i < patches.length; i += 1 ) {\n\t\tconst patch = patches[i];\n\t\tconst addSegmentForPatch = patch.storeName || patch.start > originalCharIndex;\n\n\t\taddSegmentsUntil( patch.start );\n\n\t\tif ( addSegmentForPatch ) {\n\t\t\trawSegments.push({\n\t\t\t\tgeneratedCodeLine,\n\t\t\t\tgeneratedCodeColumn,\n\t\t\t\tsourceCodeLine,\n\t\t\t\tsourceCodeColumn,\n\t\t\t\tsourceCodeName: patch.storeName ? names.indexOf( patch.original ) : -1,\n\t\t\t\tsourceIndex\n\t\t\t});\n\t\t}\n\n\t\tlet lines = patch.content.split( '\\n' );\n\t\tlet lastLine = lines.pop();\n\n\t\tif ( lines.length ) {\n\t\t\tgeneratedCodeLine += lines.length;\n\t\t\trawLines[ generatedCodeLine ] = rawSegments = [];\n\t\t\tgeneratedCodeColumn = lastLine.length;\n\t\t} else {\n\t\t\tgeneratedCodeColumn += lastLine.length;\n\t\t}\n\n\t\tlines = patch.original.split( '\\n' );\n\t\tlastLine = lines.pop();\n\n\t\tif ( lines.length ) {\n\t\t\tsourceCodeLine += lines.length;\n\t\t\tsourceCodeColumn = lastLine.length;\n\t\t} else {\n\t\t\tsourceCodeColumn += lastLine.length;\n\t\t}\n\n\t\toriginalCharIndex = patch.end;\n\t}\n\n\taddSegmentsUntil( original.length );\n\n\toffsets.sourceIndex = offsets.sourceIndex || 0;\n\toffsets.sourceCodeLine = offsets.sourceCodeLine || 0;\n\toffsets.sourceCodeColumn = offsets.sourceCodeColumn || 0;\n\toffsets.sourceCodeName = offsets.sourceCodeName || 0;\n\n\tconst encoded = rawLines.map( segments => {\n\t\tlet generatedCodeColumn = 0;\n\n\t\treturn segments.map( segment => {\n\t\t\tlet arr = [\n\t\t\t\tsegment.generatedCodeColumn - generatedCodeColumn,\n\t\t\t\tsegment.sourceIndex - offsets.sourceIndex,\n\t\t\t\tsegment.sourceCodeLine - offsets.sourceCodeLine,\n\t\t\t\tsegment.sourceCodeColumn - offsets.sourceCodeColumn\n\t\t\t];\n\n\t\t\tgeneratedCodeColumn = segment.generatedCodeColumn;\n\t\t\toffsets.sourceIndex = segment.sourceIndex;\n\t\t\toffsets.sourceCodeLine = segment.sourceCodeLine;\n\t\t\toffsets.sourceCodeColumn = segment.sourceCodeColumn;\n\n\t\t\tif ( ~segment.sourceCodeName ) {\n\t\t\t\tarr.push( segment.sourceCodeName - offsets.sourceCodeName );\n\t\t\t\toffsets.sourceCodeName = segment.sourceCodeName;\n\t\t\t}\n\n\t\t\treturn encode( arr );\n\t\t}).join( ',' );\n\t}).join( ';' );\n\n\treturn encoded;\n}\n","export default function getRelativePath ( from, to ) {\n\tlet fromParts = from.split( /[\\/\\\\]/ );\n\tlet toParts = to.split( /[\\/\\\\]/ );\n\n\tfromParts.pop(); // get dirname\n\n\twhile ( fromParts[0] === toParts[0] ) {\n\t\tfromParts.shift();\n\t\ttoParts.shift();\n\t}\n\n\tif ( fromParts.length ) {\n\t\tlet i = fromParts.length;\n\t\twhile ( i-- ) fromParts[i] = '..';\n\t}\n\n\treturn fromParts.concat( toParts ).join( '/' );\n}\n","const toString = Object.prototype.toString;\n\nexport default function isObject ( thing ) {\n\treturn toString.call( thing ) === '[object Object]';\n}\n","import Patch from './Patch.js';\nimport SourceMap from './utils/SourceMap.js';\nimport guessIndent from './utils/guessIndent.js';\nimport encodeMappings from './utils/encodeMappings.js';\nimport getRelativePath from './utils/getRelativePath.js';\nimport isObject from './utils/isObject.js';\n\nlet warned = false;\n\nexport default function MagicString ( string, options = {} ) {\n\tObject.defineProperties( this, {\n\t\toriginal:              { writable: true, value: string },\n\t\toutro:                 { writable: true, value: '' },\n\t\tintro:                 { writable: true, value: '' },\n\t\tpatches:               { writable: true, value: [] },\n\t\tfilename:              { writable: true, value: options.filename },\n\t\tindentExclusionRanges: { writable: true, value: options.indentExclusionRanges },\n\t\tsourcemapLocations:    { writable: true, value: {} },\n\t\tstoredNames:           { writable: true, value: {} },\n\t\tindentStr:             { writable: true, value: guessIndent( string ) }\n\t});\n}\n\nMagicString.prototype = {\n\taddSourcemapLocation ( char ) {\n\t\tthis.sourcemapLocations[ char ] = true;\n\t},\n\n\tappend ( content ) {\n\t\tif ( typeof content !== 'string' ) throw new TypeError( 'outro content must be a string' );\n\n\t\tthis.outro += content;\n\t\treturn this;\n\t},\n\n\tclone () {\n\t\tlet cloned = new MagicString( this.original, { filename: this.filename });\n\n\t\tcloned.patches = this.patches.map( patch => patch.clone() );\n\n\t\tif ( this.indentExclusionRanges ) {\n\t\t\tcloned.indentExclusionRanges = typeof this.indentExclusionRanges[0] === 'number' ?\n\t\t\t\t[ this.indentExclusionRanges[0], this.indentExclusionRanges[1] ] :\n\t\t\t\tthis.indentExclusionRanges.map( range => [ range.start, range.end ] );\n\t\t}\n\n\t\tObject.keys( this.sourcemapLocations ).forEach( loc => {\n\t\t\tcloned.sourcemapLocations[ loc ] = true;\n\t\t});\n\n\t\treturn cloned;\n\t},\n\n\tgenerateMap ( options ) {\n\t\toptions = options || {};\n\n\t\tconst names = Object.keys( this.storedNames );\n\n\t\treturn new SourceMap({\n\t\t\tfile: ( options.file ? options.file.split( /[\\/\\\\]/ ).pop() : null ),\n\t\t\tsources: [ options.source ? getRelativePath( options.file || '', options.source ) : null ],\n\t\t\tsourcesContent: options.includeContent ? [ this.original ] : [ null ],\n\t\t\tnames,\n\t\t\tmappings: this.getMappings( options.hires, 0, {}, names )\n\t\t});\n\t},\n\n\tgetIndentString () {\n\t\treturn this.indentStr === null ? '\\t' : this.indentStr;\n\t},\n\n\tgetMappings ( hires, sourceIndex, offsets, names ) {\n\t\treturn encodeMappings( this.original, this.intro, this.patches, hires, this.sourcemapLocations, sourceIndex, offsets, names );\n\t},\n\n\tindent ( indentStr, options ) {\n\t\tconst pattern = /^[^\\r\\n]/gm;\n\n\t\tif ( isObject( indentStr ) ) {\n\t\t\toptions = indentStr;\n\t\t\tindentStr = undefined;\n\t\t}\n\n\t\tindentStr = indentStr !== undefined ? indentStr : ( this.indentStr || '\\t' );\n\n\t\tif ( indentStr === '' ) return this; // noop\n\n\t\toptions = options || {};\n\n\t\t// Process exclusion ranges\n\t\tlet isExcluded = {};\n\n\t\tif ( options.exclude ) {\n\t\t\tlet exclusions = typeof options.exclude[0] === 'number' ? [ options.exclude ] : options.exclude;\n\t\t\texclusions.forEach( exclusion => {\n\t\t\t\tfor ( let i = exclusion[0]; i < exclusion[1]; i += 1 ) {\n\t\t\t\t\tisExcluded[i] = true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tlet shouldIndentNextCharacter = options.indentStart !== false;\n\t\tconst replacer = match => {\n\t\t\tif ( shouldIndentNextCharacter ) return `${indentStr}${match}`;\n\t\t\tshouldIndentNextCharacter = true;\n\t\t\treturn match;\n\t\t};\n\n\t\tthis.intro = this.intro.replace( pattern, replacer );\n\n\t\tlet charIndex = 0;\n\t\tlet patchIndex = 0;\n\n\t\tconst indentUntil = end => {\n\t\t\twhile ( charIndex < end ) {\n\t\t\t\tif ( !isExcluded[ charIndex ] ) {\n\t\t\t\t\tconst char = this.original[ charIndex ];\n\n\t\t\t\t\tif ( char === '\\n' ) {\n\t\t\t\t\t\tshouldIndentNextCharacter = true;\n\t\t\t\t\t} else if ( char !== '\\r' && shouldIndentNextCharacter ) {\n\t\t\t\t\t\tthis.patches.splice( patchIndex, 0, new Patch( charIndex, charIndex, indentStr, '', false ) );\n\t\t\t\t\t\tshouldIndentNextCharacter = false;\n\n\t\t\t\t\t\tpatchIndex += 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcharIndex += 1;\n\t\t\t}\n\t\t};\n\n\t\tfor ( ; patchIndex < this.patches.length; patchIndex += 1 ) { // can't cache this.patches.length, it may change\n\t\t\tconst patch = this.patches[ patchIndex ];\n\n\t\t\tindentUntil( patch.start );\n\n\t\t\tif ( !isExcluded[ charIndex ] ) {\n\t\t\t\tpatch.content = patch.content.replace( pattern, replacer );\n\n\t\t\t\tif ( patch.content.length ) {\n\t\t\t\t\tshouldIndentNextCharacter = patch.content[ patch.content.length - 1 ] === '\\n';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcharIndex = patch.end;\n\t\t}\n\n\t\tindentUntil( this.original.length );\n\n\t\tthis.outro = this.outro.replace( pattern, replacer );\n\n\t\treturn this;\n\t},\n\n\tinsert ( index, content ) {\n\t\tif ( typeof content !== 'string' ) {\n\t\t\tthrow new TypeError( 'inserted content must be a string' );\n\t\t}\n\n\t\tthis.patch( index, index, content );\n\t\treturn this;\n\t},\n\n\t// get current location of character in original string\n\tlocate ( character ) {\n\t\tthrow new Error( 'magicString.locate is deprecated' );\n\t},\n\n\tlocateOrigin ( character ) {\n\t\tthrow new Error( 'magicString.locateOrigin is deprecated' );\n\t},\n\n\toverwrite ( start, end, content, storeName ) {\n\t\tif ( typeof content !== 'string' ) {\n\t\t\tthrow new TypeError( 'replacement content must be a string' );\n\t\t}\n\n\t\tthis.patch( start, end, content, storeName );\n\t\treturn this;\n\t},\n\n\tpatch ( start, end, content, storeName ) {\n\t\tconst original = this.original.slice( start, end );\n\t\tif ( storeName ) this.storedNames[ original ] = true;\n\n\t\tlet i = this.patches.length;\n\t\twhile ( i-- ) {\n\t\t\tconst previous = this.patches[i];\n\n\t\t\t// TODO can we tidy this up?\n\n\t\t\t// if this completely covers previous patch, remove it\n\t\t\tif ( start !== end && start <= previous.start && end >= previous.end ) {\n\t\t\t\t// unless it's an insert at the start\n\t\t\t\tif ( previous.start === previous.end && previous.start === start ) break;\n\t\t\t\t// or it's an insert at the end\n\t\t\t\tif ( previous.start === previous.end && previous.end === end ) continue;\n\t\t\t\tthis.patches.splice( i, 1 );\n\t\t\t}\n\n\t\t\t// if it overlaps, throw error\n\t\t\telse if ( start < previous.end && end > previous.start ) {\n\t\t\t\t// special case – it's okay to remove overlapping ranges\n\t\t\t\tif ( !previous.content.length && !content.length ) {\n\t\t\t\t\tprevious.start = Math.min( start, previous.start );\n\t\t\t\t\tprevious.end = Math.max( end, previous.end );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthrow new Error( `Cannot overwrite the same content twice: '${original}'` );\n\t\t\t}\n\n\t\t\t// if this precedes previous patch, stop search\n\t\t\telse if ( start >= previous.end ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tconst patch = new Patch( start, end, content, original, storeName );\n\t\tthis.patches.splice( i + 1, 0, patch );\n\t\treturn patch;\n\t},\n\n\tprepend ( content ) {\n\t\tif ( typeof content !== 'string' ) throw new TypeError( 'outro content must be a string' );\n\n\t\tthis.intro = content + this.intro;\n\t\treturn this;\n\t},\n\n\tremove ( start, end ) {\n\t\tif ( start < 0 || end > this.original.length ) {\n\t\t\tthrow new Error( 'Character is out of bounds' );\n\t\t}\n\n\t\tthis.patch( start, end, '' );\n\t\treturn this;\n\t},\n\n\treplace ( start, end, content ) {\n\t\tif ( !warned ) {\n\t\t\tconsole.warn( 'magicString.replace(...) is deprecated. Use magicString.overwrite(...) instead' );\n\t\t\twarned = true;\n\t\t}\n\n\t\treturn this.overwrite( start, end, content );\n\t},\n\n\tslice ( start, end = this.original.length ) {\n\t\twhile ( start < 0 ) start += this.original.length;\n\t\twhile ( end < 0 ) end += this.original.length;\n\n\t\tlet firstPatchIndex = 0;\n\t\tlet lastPatchIndex = this.patches.length;\n\n\t\twhile ( lastPatchIndex-- ) {\n\t\t\tconst patch = this.patches[ lastPatchIndex ];\n\t\t\tif ( end >= patch.start && end < patch.end ) throw new Error( `Cannot use replaced characters (${start}, ${end}) as slice anchors` );\n\n\t\t\t// TODO this is weird, rewrite it\n\t\t\tif ( patch.start > end ) continue;\n\t\t\tbreak;\n\t\t}\n\n\t\tfor ( firstPatchIndex = 0; firstPatchIndex <= lastPatchIndex; firstPatchIndex += 1 ) {\n\t\t\tconst patch = this.patches[ firstPatchIndex ];\n\t\t\tif ( start > patch.start && start <= patch.end ) throw new Error( `Cannot use replaced characters (${start}, ${end}) as slice anchors` );\n\n\t\t\tif ( start <= patch.start ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tlet result = '';\n\t\tlet lastIndex = start;\n\n\t\tfor ( let i = firstPatchIndex; i <= lastPatchIndex; i += 1 ) {\n\t\t\tconst patch = this.patches[i];\n\t\t\tresult += this.original.slice( lastIndex, patch.start );\n\t\t\tresult += patch.content;\n\n\t\t\tlastIndex = patch.end;\n\t\t}\n\n\t\tresult += this.original.slice( lastIndex, end );\n\n\t\treturn result;\n\t},\n\n\tsnip ( start, end ) {\n\t\tconst clone = this.clone();\n\t\tclone.remove( 0, start );\n\t\tclone.remove( end, clone.original.length );\n\n\t\treturn clone;\n\t},\n\n\ttoString () {\n\t\treturn this.intro + this.slice( 0, this.original.length ) + this.outro;\n\t},\n\n\ttrimLines () {\n\t\treturn this.trim('[\\\\r\\\\n]');\n\t},\n\n\ttrim ( charType ) {\n\t\treturn this.trimStart( charType ).trimEnd( charType );\n\t},\n\n\ttrimEnd ( charType ) {\n\t\tconst rx = new RegExp( ( charType || '\\\\s' ) + '+$' );\n\n\t\tthis.outro = this.outro.replace( rx, '' );\n\t\tif ( this.outro.length ) return this;\n\n\t\tlet charIndex = this.original.length;\n\t\tlet i = this.patches.length;\n\n\t\twhile ( i-- ) {\n\t\t\tconst patch = this.patches[i];\n\n\t\t\tif ( charIndex > patch.end ) {\n\t\t\t\tconst slice = this.original.slice( patch.end, charIndex );\n\n\t\t\t\tconst match = rx.exec( slice );\n\t\t\t\tif ( match ) {\n\t\t\t\t\tthis.patch( charIndex - match[0].length, charIndex, '' );\n\t\t\t\t}\n\n\t\t\t\tif ( !match || match[0].length < slice.length ) {\n\t\t\t\t\t// there is non-whitespace after the patch\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tpatch.content = patch.content.replace( rx, '' );\n\t\t\tif ( patch.content ) return this;\n\n\t\t\tcharIndex = patch.start;\n\t\t}\n\n\t\tconst slice = this.original.slice( 0, charIndex );\n\n\t\tconst match = rx.exec( slice );\n\t\tif ( match ) this.patch( charIndex - match[0].length, charIndex, '' );\n\n\t\treturn this;\n\t},\n\n\ttrimStart ( charType ) {\n\t\tconst rx = new RegExp( '^' + ( charType || '\\\\s' ) + '+' );\n\n\t\tthis.intro = this.intro.replace( rx, '' );\n\t\tif ( this.intro.length ) return this;\n\n\t\tlet charIndex = 0;\n\n\t\tfor ( let i = 0; i < this.patches.length; i += 1 ) {\n\t\t\tconst patch = this.patches[i];\n\n\t\t\tif ( charIndex < patch.start ) {\n\t\t\t\tconst slice = this.original.slice( charIndex, patch.start );\n\n\t\t\t\tconst match = rx.exec( slice );\n\t\t\t\tif ( match ) this.patch( charIndex, charIndex + match[0].length, '' );\n\n\t\t\t\tif ( !match || match[0].length < slice.length ) {\n\t\t\t\t\t// there is non-whitespace before the patch\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tpatch.content = patch.content.replace( rx, '' );\n\t\t\tif ( patch.content ) return this;\n\n\t\t\tcharIndex = patch.end;\n\t\t}\n\n\t\tconst slice = this.original.slice( charIndex, this.original.length );\n\n\t\tconst match = rx.exec( slice );\n\t\tif ( match ) this.patch( charIndex, charIndex + match[0].length, '' );\n\n\t\treturn this;\n\t}\n}\n","export default Object.prototype.hasOwnProperty;","import MagicString from './MagicString.js';\nimport SourceMap from './utils/SourceMap.js';\nimport getRelativePath from './utils/getRelativePath.js';\nimport hasOwnProp from './utils/hasOwnProp.js';\nimport isObject from './utils/isObject.js';\n\nexport default function Bundle ( options = {} ) {\n\tthis.intro = options.intro || '';\n\tthis.separator = options.separator !== undefined ? options.separator : '\\n';\n\n\tthis.sources = [];\n\n\tthis.uniqueSources = [];\n\tthis.uniqueSourceIndexByFilename = {};\n}\n\nBundle.prototype = {\n\taddSource ( source ) {\n\t\tif ( source instanceof MagicString ) {\n\t\t\treturn this.addSource({\n\t\t\t\tcontent: source,\n\t\t\t\tfilename: source.filename,\n\t\t\t\tseparator: this.separator\n\t\t\t});\n\t\t}\n\n\t\tif ( !isObject( source ) || !source.content ) {\n\t\t\tthrow new Error( 'bundle.addSource() takes an object with a `content` property, which should be an instance of MagicString, and an optional `filename`' );\n\t\t}\n\n\t\t[ 'filename', 'indentExclusionRanges', 'separator' ].forEach( option => {\n\t\t\tif ( !hasOwnProp.call( source, option ) ) source[ option ] = source.content[ option ];\n\t\t});\n\n\t\tif ( source.separator === undefined ) { // TODO there's a bunch of this sort of thing, needs cleaning up\n\t\t\tsource.separator = this.separator;\n\t\t}\n\n\t\tif ( source.filename ) {\n\t\t\tif ( !hasOwnProp.call( this.uniqueSourceIndexByFilename, source.filename ) ) {\n\t\t\t\tthis.uniqueSourceIndexByFilename[ source.filename ] = this.uniqueSources.length;\n\t\t\t\tthis.uniqueSources.push({ filename: source.filename, content: source.content.original });\n\t\t\t} else {\n\t\t\t\tconst uniqueSource = this.uniqueSources[ this.uniqueSourceIndexByFilename[ source.filename ] ];\n\t\t\t\tif ( source.content.original !== uniqueSource.content ) {\n\t\t\t\t\tthrow new Error( `Illegal source: same filename (${source.filename}), different contents` );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.sources.push( source );\n\t\treturn this;\n\t},\n\n\tappend ( str, options ) {\n\t\tthis.addSource({\n\t\t\tcontent: new MagicString( str ),\n\t\t\tseparator: ( options && options.separator ) || ''\n\t\t});\n\n\t\treturn this;\n\t},\n\n\tclone () {\n\t\tconst bundle = new Bundle({\n\t\t\tintro: this.intro,\n\t\t\tseparator: this.separator\n\t\t});\n\n\t\tthis.sources.forEach( source => {\n\t\t\tbundle.addSource({\n\t\t\t\tfilename: source.filename,\n\t\t\t\tcontent: source.content.clone(),\n\t\t\t\tseparator: source.separator\n\t\t\t});\n\t\t});\n\n\t\treturn bundle;\n\t},\n\n\tgenerateMap ( options ) {\n\t\tlet offsets = {};\n\n\t\tlet names = [];\n\t\tthis.sources.forEach( source => {\n\t\t\tObject.keys( source.content.storedNames ).forEach( name => {\n\t\t\t\tif ( !~names.indexOf( name ) ) names.push( name );\n\t\t\t});\n\t\t});\n\n\t\tconst encoded = (\n\t\t\tgetSemis( this.intro ) +\n\t\t\tthis.sources.map( ( source, i ) => {\n\t\t\t\tconst prefix = ( i > 0 ) ? ( getSemis( source.separator ) || ',' ) : '';\n\t\t\t\tlet mappings;\n\n\t\t\t\t// we don't bother encoding sources without a filename\n\t\t\t\tif ( !source.filename ) {\n\t\t\t\t\tmappings = getSemis( source.content.toString() );\n\t\t\t\t} else {\n\t\t\t\t\tconst sourceIndex = this.uniqueSourceIndexByFilename[ source.filename ];\n\t\t\t\t\tmappings = source.content.getMappings( options.hires, sourceIndex, offsets, names );\n\t\t\t\t}\n\n\t\t\t\treturn prefix + mappings;\n\t\t\t}).join( '' )\n\t\t);\n\n\t\treturn new SourceMap({\n\t\t\tfile: ( options.file ? options.file.split( /[\\/\\\\]/ ).pop() : null ),\n\t\t\tsources: this.uniqueSources.map( source => {\n\t\t\t\treturn options.file ? getRelativePath( options.file, source.filename ) : source.filename;\n\t\t\t}),\n\t\t\tsourcesContent: this.uniqueSources.map( source => {\n\t\t\t\treturn options.includeContent ? source.content : null;\n\t\t\t}),\n\t\t\tnames,\n\t\t\tmappings: encoded\n\t\t});\n\t},\n\n\tgetIndentString () {\n\t\tlet indentStringCounts = {};\n\n\t\tthis.sources.forEach( source => {\n\t\t\tconst indentStr = source.content.indentStr;\n\n\t\t\tif ( indentStr === null ) return;\n\n\t\t\tif ( !indentStringCounts[ indentStr ] ) indentStringCounts[ indentStr ] = 0;\n\t\t\tindentStringCounts[ indentStr ] += 1;\n\t\t});\n\n\t\treturn ( Object.keys( indentStringCounts ).sort( ( a, b ) => {\n\t\t\treturn indentStringCounts[a] - indentStringCounts[b];\n\t\t})[0] ) || '\\t';\n\t},\n\n\tindent ( indentStr ) {\n\t\tif ( !arguments.length ) {\n\t\t\tindentStr = this.getIndentString();\n\t\t}\n\n\t\tif ( indentStr === '' ) return this; // noop\n\n\t\tlet trailingNewline = !this.intro || this.intro.slice( -1 ) === '\\n';\n\n\t\tthis.sources.forEach( ( source, i ) => {\n\t\t\tconst separator = source.separator !== undefined ? source.separator : this.separator;\n\t\t\tconst indentStart = trailingNewline || ( i > 0 && /\\r?\\n$/.test( separator ) );\n\n\t\t\tsource.content.indent( indentStr, {\n\t\t\t\texclude: source.indentExclusionRanges,\n\t\t\t\tindentStart//: trailingNewline || /\\r?\\n$/.test( separator )  //true///\\r?\\n/.test( separator )\n\t\t\t});\n\n\t\t\t// TODO this is a very slow way to determine this\n\t\t\ttrailingNewline = source.content.toString().slice( 0, -1 ) === '\\n';\n\t\t});\n\n\t\tif ( this.intro ) {\n\t\t\tthis.intro = indentStr + this.intro.replace( /^[^\\n]/gm, ( match, index ) => {\n\t\t\t\treturn index > 0 ? indentStr + match : match;\n\t\t\t});\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tprepend ( str ) {\n\t\tthis.intro = str + this.intro;\n\t\treturn this;\n\t},\n\n\ttoString () {\n\t\tconst body = this.sources.map( ( source, i ) => {\n\t\t\tconst separator = source.separator !== undefined ? source.separator : this.separator;\n\t\t\tlet str = ( i > 0 ? separator : '' ) + source.content.toString();\n\n\t\t\treturn str;\n\t\t}).join( '' );\n\n\t\treturn this.intro + body;\n\t},\n\n\ttrimLines () {\n\t\treturn this.trim('[\\\\r\\\\n]');\n\t},\n\n\ttrim ( charType ) {\n\t\treturn this.trimStart( charType ).trimEnd( charType );\n\t},\n\n\ttrimStart ( charType ) {\n\t\tconst rx = new RegExp( '^' + ( charType || '\\\\s' ) + '+' );\n\t\tthis.intro = this.intro.replace( rx, '' );\n\n\t\tif ( !this.intro ) {\n\t\t\tlet source;\n\t\t\tlet i = 0;\n\n\t\t\tdo {\n\t\t\t\tsource = this.sources[i];\n\n\t\t\t\tif ( !source ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tsource.content.trimStart( charType );\n\t\t\t\ti += 1;\n\t\t\t} while ( source.content.toString() === '' ); // TODO faster way to determine non-empty source?\n\t\t}\n\n\t\treturn this;\n\t},\n\n\ttrimEnd ( charType ) {\n\t\tconst rx = new RegExp( ( charType || '\\\\s' ) + '+$' );\n\n\t\tlet source;\n\t\tlet i = this.sources.length - 1;\n\n\t\tdo {\n\t\t\tsource = this.sources[i];\n\n\t\t\tif ( !source ) {\n\t\t\t\tthis.intro = this.intro.replace( rx, '' );\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tsource.content.trimEnd( charType );\n\t\t\ti -= 1;\n\t\t} while ( source.content.toString() === '' ); // TODO faster way to determine non-empty source?\n\n\t\treturn this;\n\t}\n};\n\nfunction getSemis ( str ) {\n\treturn new Array( str.split( '\\n' ).length ).join( ';' );\n}\n","import MagicString from './MagicString.js';\nimport Bundle from './Bundle.js';\n\nMagicString.Bundle = Bundle;\n\nexport default MagicString;\n"],"names":[],"mappings":"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"}