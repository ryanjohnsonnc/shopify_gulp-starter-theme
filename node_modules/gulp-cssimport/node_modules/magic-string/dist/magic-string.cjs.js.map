{"version":3,"file":"magic-string.cjs.js","sources":["../src/Patch.js","../src/utils/btoa.js","../src/utils/SourceMap.js","../src/utils/guessIndent.js","../src/utils/encodeMappings.js","../src/utils/getRelativePath.js","../src/utils/isObject.js","../src/MagicString.js","../src/utils/hasOwnProp.js","../src/Bundle.js","../src/index.js"],"sourcesContent":["export default function Patch ( start, end, content, original, storeName ) {\n\tthis.start = start;\n\tthis.end = end;\n\tthis.content = content;\n\tthis.original = original;\n\tthis.storeName = storeName;\n}\n\nPatch.prototype = {\n\tclone () {\n\t\treturn new Patch( this.start, this.end, this.content, this.original, this.storeName );\n\t}\n};\n","let _btoa;\n\nif ( typeof window !== 'undefined' && typeof window.btoa === 'function' ) {\n\t_btoa = window.btoa;\n} else if ( typeof Buffer === 'function' ) {\n\t/* global Buffer */\n\t_btoa = str => new Buffer( str ).toString( 'base64' );\n} else {\n\tthrow new Error( 'Unsupported environment: `window.btoa` or `Buffer` should be supported.' );\n}\n\nexport default _btoa;\n","import btoa from './btoa.js';\n\nexport default function SourceMap ( properties ) {\n\tthis.version = 3;\n\n\tthis.file           = properties.file;\n\tthis.sources        = properties.sources;\n\tthis.sourcesContent = properties.sourcesContent;\n\tthis.names          = properties.names;\n\tthis.mappings       = properties.mappings;\n}\n\nSourceMap.prototype = {\n\ttoString () {\n\t\treturn JSON.stringify( this );\n\t},\n\n\ttoUrl () {\n\t\treturn 'data:application/json;charset=utf-8;base64,' + btoa( this.toString() );\n\t}\n};\n","export default function guessIndent ( code ) {\n\tconst lines = code.split( '\\n' );\n\n\tconst tabbed = lines.filter( line => /^\\t+/.test( line ) );\n\tconst spaced = lines.filter( line => /^ {2,}/.test( line ) );\n\n\tif ( tabbed.length === 0 && spaced.length === 0 ) {\n\t\treturn null;\n\t}\n\n\t// More lines tabbed than spaced? Assume tabs, and\n\t// default to tabs in the case of a tie (or nothing\n\t// to go on)\n\tif ( tabbed.length >= spaced.length ) {\n\t\treturn '\\t';\n\t}\n\n\t// Otherwise, we need to guess the multiple\n\tconst min = spaced.reduce( ( previous, current ) => {\n\t\tconst numSpaces = /^ +/.exec( current )[0].length;\n\t\treturn Math.min( numSpaces, previous );\n\t}, Infinity );\n\n\treturn new Array( min + 1 ).join( ' ' );\n}\n","import { encode } from 'vlq';\n\nexport default function encodeMappings ( original, intro, patches, hires, sourcemapLocations, sourceIndex, offsets, names ) {\n\tlet rawLines = [];\n\n\tlet generatedCodeLine = intro.split( '\\n' ).length - 1;\n\tlet rawSegments = rawLines[ generatedCodeLine ] = [];\n\n\tlet originalCharIndex = 0;\n\n\tlet generatedCodeColumn = 0;\n\tlet sourceCodeLine = 0;\n\tlet sourceCodeColumn = 0;\n\n\tfunction addSegmentsUntil ( end ) {\n\t\tlet first = true;\n\n\t\twhile ( originalCharIndex < end ) {\n\t\t\tif ( hires || first || sourcemapLocations[ originalCharIndex ] ) {\n\t\t\t\trawSegments.push({\n\t\t\t\t\tgeneratedCodeLine,\n\t\t\t\t\tgeneratedCodeColumn,\n\t\t\t\t\tsourceCodeLine,\n\t\t\t\t\tsourceCodeColumn,\n\t\t\t\t\tsourceCodeName: -1,\n\t\t\t\t\tsourceIndex\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif ( original[ originalCharIndex ] === '\\n' ) {\n\t\t\t\tsourceCodeLine += 1;\n\t\t\t\tsourceCodeColumn = 0;\n\t\t\t\tgeneratedCodeLine += 1;\n\t\t\t\trawLines[ generatedCodeLine ] = rawSegments = [];\n\t\t\t\tgeneratedCodeColumn = 0;\n\t\t\t} else {\n\t\t\t\tsourceCodeColumn += 1;\n\t\t\t\tgeneratedCodeColumn += 1;\n\t\t\t}\n\n\t\t\toriginalCharIndex += 1;\n\t\t\tfirst = false;\n\t\t}\n\t}\n\n\tfor ( let i = 0; i < patches.length; i += 1 ) {\n\t\tconst patch = patches[i];\n\t\tconst addSegmentForPatch = patch.storeName || patch.start > originalCharIndex;\n\n\t\taddSegmentsUntil( patch.start );\n\n\t\tif ( addSegmentForPatch ) {\n\t\t\trawSegments.push({\n\t\t\t\tgeneratedCodeLine,\n\t\t\t\tgeneratedCodeColumn,\n\t\t\t\tsourceCodeLine,\n\t\t\t\tsourceCodeColumn,\n\t\t\t\tsourceCodeName: patch.storeName ? names.indexOf( patch.original ) : -1,\n\t\t\t\tsourceIndex\n\t\t\t});\n\t\t}\n\n\t\tlet lines = patch.content.split( '\\n' );\n\t\tlet lastLine = lines.pop();\n\n\t\tif ( lines.length ) {\n\t\t\tgeneratedCodeLine += lines.length;\n\t\t\trawLines[ generatedCodeLine ] = rawSegments = [];\n\t\t\tgeneratedCodeColumn = lastLine.length;\n\t\t} else {\n\t\t\tgeneratedCodeColumn += lastLine.length;\n\t\t}\n\n\t\tlines = patch.original.split( '\\n' );\n\t\tlastLine = lines.pop();\n\n\t\tif ( lines.length ) {\n\t\t\tsourceCodeLine += lines.length;\n\t\t\tsourceCodeColumn = lastLine.length;\n\t\t} else {\n\t\t\tsourceCodeColumn += lastLine.length;\n\t\t}\n\n\t\toriginalCharIndex = patch.end;\n\t}\n\n\taddSegmentsUntil( original.length );\n\n\toffsets.sourceIndex = offsets.sourceIndex || 0;\n\toffsets.sourceCodeLine = offsets.sourceCodeLine || 0;\n\toffsets.sourceCodeColumn = offsets.sourceCodeColumn || 0;\n\toffsets.sourceCodeName = offsets.sourceCodeName || 0;\n\n\tconst encoded = rawLines.map( segments => {\n\t\tlet generatedCodeColumn = 0;\n\n\t\treturn segments.map( segment => {\n\t\t\tlet arr = [\n\t\t\t\tsegment.generatedCodeColumn - generatedCodeColumn,\n\t\t\t\tsegment.sourceIndex - offsets.sourceIndex,\n\t\t\t\tsegment.sourceCodeLine - offsets.sourceCodeLine,\n\t\t\t\tsegment.sourceCodeColumn - offsets.sourceCodeColumn\n\t\t\t];\n\n\t\t\tgeneratedCodeColumn = segment.generatedCodeColumn;\n\t\t\toffsets.sourceIndex = segment.sourceIndex;\n\t\t\toffsets.sourceCodeLine = segment.sourceCodeLine;\n\t\t\toffsets.sourceCodeColumn = segment.sourceCodeColumn;\n\n\t\t\tif ( ~segment.sourceCodeName ) {\n\t\t\t\tarr.push( segment.sourceCodeName - offsets.sourceCodeName );\n\t\t\t\toffsets.sourceCodeName = segment.sourceCodeName;\n\t\t\t}\n\n\t\t\treturn encode( arr );\n\t\t}).join( ',' );\n\t}).join( ';' );\n\n\treturn encoded;\n}\n","export default function getRelativePath ( from, to ) {\n\tlet fromParts = from.split( /[\\/\\\\]/ );\n\tlet toParts = to.split( /[\\/\\\\]/ );\n\n\tfromParts.pop(); // get dirname\n\n\twhile ( fromParts[0] === toParts[0] ) {\n\t\tfromParts.shift();\n\t\ttoParts.shift();\n\t}\n\n\tif ( fromParts.length ) {\n\t\tlet i = fromParts.length;\n\t\twhile ( i-- ) fromParts[i] = '..';\n\t}\n\n\treturn fromParts.concat( toParts ).join( '/' );\n}\n","const toString = Object.prototype.toString;\n\nexport default function isObject ( thing ) {\n\treturn toString.call( thing ) === '[object Object]';\n}\n","import Patch from './Patch.js';\nimport SourceMap from './utils/SourceMap.js';\nimport guessIndent from './utils/guessIndent.js';\nimport encodeMappings from './utils/encodeMappings.js';\nimport getRelativePath from './utils/getRelativePath.js';\nimport isObject from './utils/isObject.js';\n\nlet warned = false;\n\nexport default function MagicString ( string, options = {} ) {\n\tObject.defineProperties( this, {\n\t\toriginal:              { writable: true, value: string },\n\t\toutro:                 { writable: true, value: '' },\n\t\tintro:                 { writable: true, value: '' },\n\t\tpatches:               { writable: true, value: [] },\n\t\tfilename:              { writable: true, value: options.filename },\n\t\tindentExclusionRanges: { writable: true, value: options.indentExclusionRanges },\n\t\tsourcemapLocations:    { writable: true, value: {} },\n\t\tstoredNames:           { writable: true, value: {} },\n\t\tindentStr:             { writable: true, value: guessIndent( string ) }\n\t});\n}\n\nMagicString.prototype = {\n\taddSourcemapLocation ( char ) {\n\t\tthis.sourcemapLocations[ char ] = true;\n\t},\n\n\tappend ( content ) {\n\t\tif ( typeof content !== 'string' ) throw new TypeError( 'outro content must be a string' );\n\n\t\tthis.outro += content;\n\t\treturn this;\n\t},\n\n\tclone () {\n\t\tlet cloned = new MagicString( this.original, { filename: this.filename });\n\n\t\tcloned.patches = this.patches.map( patch => patch.clone() );\n\n\t\tif ( this.indentExclusionRanges ) {\n\t\t\tcloned.indentExclusionRanges = typeof this.indentExclusionRanges[0] === 'number' ?\n\t\t\t\t[ this.indentExclusionRanges[0], this.indentExclusionRanges[1] ] :\n\t\t\t\tthis.indentExclusionRanges.map( range => [ range.start, range.end ] );\n\t\t}\n\n\t\tObject.keys( this.sourcemapLocations ).forEach( loc => {\n\t\t\tcloned.sourcemapLocations[ loc ] = true;\n\t\t});\n\n\t\treturn cloned;\n\t},\n\n\tgenerateMap ( options ) {\n\t\toptions = options || {};\n\n\t\tconst names = Object.keys( this.storedNames );\n\n\t\treturn new SourceMap({\n\t\t\tfile: ( options.file ? options.file.split( /[\\/\\\\]/ ).pop() : null ),\n\t\t\tsources: [ options.source ? getRelativePath( options.file || '', options.source ) : null ],\n\t\t\tsourcesContent: options.includeContent ? [ this.original ] : [ null ],\n\t\t\tnames,\n\t\t\tmappings: this.getMappings( options.hires, 0, {}, names )\n\t\t});\n\t},\n\n\tgetIndentString () {\n\t\treturn this.indentStr === null ? '\\t' : this.indentStr;\n\t},\n\n\tgetMappings ( hires, sourceIndex, offsets, names ) {\n\t\treturn encodeMappings( this.original, this.intro, this.patches, hires, this.sourcemapLocations, sourceIndex, offsets, names );\n\t},\n\n\tindent ( indentStr, options ) {\n\t\tconst pattern = /^[^\\r\\n]/gm;\n\n\t\tif ( isObject( indentStr ) ) {\n\t\t\toptions = indentStr;\n\t\t\tindentStr = undefined;\n\t\t}\n\n\t\tindentStr = indentStr !== undefined ? indentStr : ( this.indentStr || '\\t' );\n\n\t\tif ( indentStr === '' ) return this; // noop\n\n\t\toptions = options || {};\n\n\t\t// Process exclusion ranges\n\t\tlet isExcluded = {};\n\n\t\tif ( options.exclude ) {\n\t\t\tlet exclusions = typeof options.exclude[0] === 'number' ? [ options.exclude ] : options.exclude;\n\t\t\texclusions.forEach( exclusion => {\n\t\t\t\tfor ( let i = exclusion[0]; i < exclusion[1]; i += 1 ) {\n\t\t\t\t\tisExcluded[i] = true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tlet shouldIndentNextCharacter = options.indentStart !== false;\n\t\tconst replacer = match => {\n\t\t\tif ( shouldIndentNextCharacter ) return `${indentStr}${match}`;\n\t\t\tshouldIndentNextCharacter = true;\n\t\t\treturn match;\n\t\t};\n\n\t\tthis.intro = this.intro.replace( pattern, replacer );\n\n\t\tlet charIndex = 0;\n\t\tlet patchIndex = 0;\n\n\t\tconst indentUntil = end => {\n\t\t\twhile ( charIndex < end ) {\n\t\t\t\tif ( !isExcluded[ charIndex ] ) {\n\t\t\t\t\tconst char = this.original[ charIndex ];\n\n\t\t\t\t\tif ( char === '\\n' ) {\n\t\t\t\t\t\tshouldIndentNextCharacter = true;\n\t\t\t\t\t} else if ( char !== '\\r' && shouldIndentNextCharacter ) {\n\t\t\t\t\t\tthis.patches.splice( patchIndex, 0, new Patch( charIndex, charIndex, indentStr, '', false ) );\n\t\t\t\t\t\tshouldIndentNextCharacter = false;\n\n\t\t\t\t\t\tpatchIndex += 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcharIndex += 1;\n\t\t\t}\n\t\t};\n\n\t\tfor ( ; patchIndex < this.patches.length; patchIndex += 1 ) { // can't cache this.patches.length, it may change\n\t\t\tconst patch = this.patches[ patchIndex ];\n\n\t\t\tindentUntil( patch.start );\n\n\t\t\tif ( !isExcluded[ charIndex ] ) {\n\t\t\t\tpatch.content = patch.content.replace( pattern, replacer );\n\n\t\t\t\tif ( patch.content.length ) {\n\t\t\t\t\tshouldIndentNextCharacter = patch.content[ patch.content.length - 1 ] === '\\n';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcharIndex = patch.end;\n\t\t}\n\n\t\tindentUntil( this.original.length );\n\n\t\tthis.outro = this.outro.replace( pattern, replacer );\n\n\t\treturn this;\n\t},\n\n\tinsert ( index, content ) {\n\t\tif ( typeof content !== 'string' ) {\n\t\t\tthrow new TypeError( 'inserted content must be a string' );\n\t\t}\n\n\t\tthis.patch( index, index, content );\n\t\treturn this;\n\t},\n\n\t// get current location of character in original string\n\tlocate ( character ) {\n\t\tthrow new Error( 'magicString.locate is deprecated' );\n\t},\n\n\tlocateOrigin ( character ) {\n\t\tthrow new Error( 'magicString.locateOrigin is deprecated' );\n\t},\n\n\toverwrite ( start, end, content, storeName ) {\n\t\tif ( typeof content !== 'string' ) {\n\t\t\tthrow new TypeError( 'replacement content must be a string' );\n\t\t}\n\n\t\tthis.patch( start, end, content, storeName );\n\t\treturn this;\n\t},\n\n\tpatch ( start, end, content, storeName ) {\n\t\tconst original = this.original.slice( start, end );\n\t\tif ( storeName ) this.storedNames[ original ] = true;\n\n\t\tlet i = this.patches.length;\n\t\twhile ( i-- ) {\n\t\t\tconst previous = this.patches[i];\n\n\t\t\t// TODO can we tidy this up?\n\n\t\t\t// if this completely covers previous patch, remove it\n\t\t\tif ( start !== end && start <= previous.start && end >= previous.end ) {\n\t\t\t\t// unless it's an insert at the start\n\t\t\t\tif ( previous.start === previous.end && previous.start === start ) break;\n\t\t\t\t// or it's an insert at the end\n\t\t\t\tif ( previous.start === previous.end && previous.end === end ) continue;\n\t\t\t\tthis.patches.splice( i, 1 );\n\t\t\t}\n\n\t\t\t// if it overlaps, throw error\n\t\t\telse if ( start < previous.end && end > previous.start ) {\n\t\t\t\t// special case – it's okay to remove overlapping ranges\n\t\t\t\tif ( !previous.content.length && !content.length ) {\n\t\t\t\t\tprevious.start = Math.min( start, previous.start );\n\t\t\t\t\tprevious.end = Math.max( end, previous.end );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthrow new Error( `Cannot overwrite the same content twice: '${original}'` );\n\t\t\t}\n\n\t\t\t// if this precedes previous patch, stop search\n\t\t\telse if ( start >= previous.end ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tconst patch = new Patch( start, end, content, original, storeName );\n\t\tthis.patches.splice( i + 1, 0, patch );\n\t\treturn patch;\n\t},\n\n\tprepend ( content ) {\n\t\tif ( typeof content !== 'string' ) throw new TypeError( 'outro content must be a string' );\n\n\t\tthis.intro = content + this.intro;\n\t\treturn this;\n\t},\n\n\tremove ( start, end ) {\n\t\tif ( start < 0 || end > this.original.length ) {\n\t\t\tthrow new Error( 'Character is out of bounds' );\n\t\t}\n\n\t\tthis.patch( start, end, '' );\n\t\treturn this;\n\t},\n\n\treplace ( start, end, content ) {\n\t\tif ( !warned ) {\n\t\t\tconsole.warn( 'magicString.replace(...) is deprecated. Use magicString.overwrite(...) instead' );\n\t\t\twarned = true;\n\t\t}\n\n\t\treturn this.overwrite( start, end, content );\n\t},\n\n\tslice ( start, end = this.original.length ) {\n\t\twhile ( start < 0 ) start += this.original.length;\n\t\twhile ( end < 0 ) end += this.original.length;\n\n\t\tlet firstPatchIndex = 0;\n\t\tlet lastPatchIndex = this.patches.length;\n\n\t\twhile ( lastPatchIndex-- ) {\n\t\t\tconst patch = this.patches[ lastPatchIndex ];\n\t\t\tif ( end >= patch.start && end < patch.end ) throw new Error( `Cannot use replaced characters (${start}, ${end}) as slice anchors` );\n\n\t\t\t// TODO this is weird, rewrite it\n\t\t\tif ( patch.start > end ) continue;\n\t\t\tbreak;\n\t\t}\n\n\t\tfor ( firstPatchIndex = 0; firstPatchIndex <= lastPatchIndex; firstPatchIndex += 1 ) {\n\t\t\tconst patch = this.patches[ firstPatchIndex ];\n\t\t\tif ( start > patch.start && start <= patch.end ) throw new Error( `Cannot use replaced characters (${start}, ${end}) as slice anchors` );\n\n\t\t\tif ( start <= patch.start ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tlet result = '';\n\t\tlet lastIndex = start;\n\n\t\tfor ( let i = firstPatchIndex; i <= lastPatchIndex; i += 1 ) {\n\t\t\tconst patch = this.patches[i];\n\t\t\tresult += this.original.slice( lastIndex, patch.start );\n\t\t\tresult += patch.content;\n\n\t\t\tlastIndex = patch.end;\n\t\t}\n\n\t\tresult += this.original.slice( lastIndex, end );\n\n\t\treturn result;\n\t},\n\n\tsnip ( start, end ) {\n\t\tconst clone = this.clone();\n\t\tclone.remove( 0, start );\n\t\tclone.remove( end, clone.original.length );\n\n\t\treturn clone;\n\t},\n\n\ttoString () {\n\t\treturn this.intro + this.slice( 0, this.original.length ) + this.outro;\n\t},\n\n\ttrimLines () {\n\t\treturn this.trim('[\\\\r\\\\n]');\n\t},\n\n\ttrim ( charType ) {\n\t\treturn this.trimStart( charType ).trimEnd( charType );\n\t},\n\n\ttrimEnd ( charType ) {\n\t\tconst rx = new RegExp( ( charType || '\\\\s' ) + '+$' );\n\n\t\tthis.outro = this.outro.replace( rx, '' );\n\t\tif ( this.outro.length ) return this;\n\n\t\tlet charIndex = this.original.length;\n\t\tlet i = this.patches.length;\n\n\t\twhile ( i-- ) {\n\t\t\tconst patch = this.patches[i];\n\n\t\t\tif ( charIndex > patch.end ) {\n\t\t\t\tconst slice = this.original.slice( patch.end, charIndex );\n\n\t\t\t\tconst match = rx.exec( slice );\n\t\t\t\tif ( match ) {\n\t\t\t\t\tthis.patch( charIndex - match[0].length, charIndex, '' );\n\t\t\t\t}\n\n\t\t\t\tif ( !match || match[0].length < slice.length ) {\n\t\t\t\t\t// there is non-whitespace after the patch\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tpatch.content = patch.content.replace( rx, '' );\n\t\t\tif ( patch.content ) return this;\n\n\t\t\tcharIndex = patch.start;\n\t\t}\n\n\t\tconst slice = this.original.slice( 0, charIndex );\n\n\t\tconst match = rx.exec( slice );\n\t\tif ( match ) this.patch( charIndex - match[0].length, charIndex, '' );\n\n\t\treturn this;\n\t},\n\n\ttrimStart ( charType ) {\n\t\tconst rx = new RegExp( '^' + ( charType || '\\\\s' ) + '+' );\n\n\t\tthis.intro = this.intro.replace( rx, '' );\n\t\tif ( this.intro.length ) return this;\n\n\t\tlet charIndex = 0;\n\n\t\tfor ( let i = 0; i < this.patches.length; i += 1 ) {\n\t\t\tconst patch = this.patches[i];\n\n\t\t\tif ( charIndex < patch.start ) {\n\t\t\t\tconst slice = this.original.slice( charIndex, patch.start );\n\n\t\t\t\tconst match = rx.exec( slice );\n\t\t\t\tif ( match ) this.patch( charIndex, charIndex + match[0].length, '' );\n\n\t\t\t\tif ( !match || match[0].length < slice.length ) {\n\t\t\t\t\t// there is non-whitespace before the patch\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tpatch.content = patch.content.replace( rx, '' );\n\t\t\tif ( patch.content ) return this;\n\n\t\t\tcharIndex = patch.end;\n\t\t}\n\n\t\tconst slice = this.original.slice( charIndex, this.original.length );\n\n\t\tconst match = rx.exec( slice );\n\t\tif ( match ) this.patch( charIndex, charIndex + match[0].length, '' );\n\n\t\treturn this;\n\t}\n}\n","export default Object.prototype.hasOwnProperty;","import MagicString from './MagicString.js';\nimport SourceMap from './utils/SourceMap.js';\nimport getRelativePath from './utils/getRelativePath.js';\nimport hasOwnProp from './utils/hasOwnProp.js';\nimport isObject from './utils/isObject.js';\n\nexport default function Bundle ( options = {} ) {\n\tthis.intro = options.intro || '';\n\tthis.separator = options.separator !== undefined ? options.separator : '\\n';\n\n\tthis.sources = [];\n\n\tthis.uniqueSources = [];\n\tthis.uniqueSourceIndexByFilename = {};\n}\n\nBundle.prototype = {\n\taddSource ( source ) {\n\t\tif ( source instanceof MagicString ) {\n\t\t\treturn this.addSource({\n\t\t\t\tcontent: source,\n\t\t\t\tfilename: source.filename,\n\t\t\t\tseparator: this.separator\n\t\t\t});\n\t\t}\n\n\t\tif ( !isObject( source ) || !source.content ) {\n\t\t\tthrow new Error( 'bundle.addSource() takes an object with a `content` property, which should be an instance of MagicString, and an optional `filename`' );\n\t\t}\n\n\t\t[ 'filename', 'indentExclusionRanges', 'separator' ].forEach( option => {\n\t\t\tif ( !hasOwnProp.call( source, option ) ) source[ option ] = source.content[ option ];\n\t\t});\n\n\t\tif ( source.separator === undefined ) { // TODO there's a bunch of this sort of thing, needs cleaning up\n\t\t\tsource.separator = this.separator;\n\t\t}\n\n\t\tif ( source.filename ) {\n\t\t\tif ( !hasOwnProp.call( this.uniqueSourceIndexByFilename, source.filename ) ) {\n\t\t\t\tthis.uniqueSourceIndexByFilename[ source.filename ] = this.uniqueSources.length;\n\t\t\t\tthis.uniqueSources.push({ filename: source.filename, content: source.content.original });\n\t\t\t} else {\n\t\t\t\tconst uniqueSource = this.uniqueSources[ this.uniqueSourceIndexByFilename[ source.filename ] ];\n\t\t\t\tif ( source.content.original !== uniqueSource.content ) {\n\t\t\t\t\tthrow new Error( `Illegal source: same filename (${source.filename}), different contents` );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.sources.push( source );\n\t\treturn this;\n\t},\n\n\tappend ( str, options ) {\n\t\tthis.addSource({\n\t\t\tcontent: new MagicString( str ),\n\t\t\tseparator: ( options && options.separator ) || ''\n\t\t});\n\n\t\treturn this;\n\t},\n\n\tclone () {\n\t\tconst bundle = new Bundle({\n\t\t\tintro: this.intro,\n\t\t\tseparator: this.separator\n\t\t});\n\n\t\tthis.sources.forEach( source => {\n\t\t\tbundle.addSource({\n\t\t\t\tfilename: source.filename,\n\t\t\t\tcontent: source.content.clone(),\n\t\t\t\tseparator: source.separator\n\t\t\t});\n\t\t});\n\n\t\treturn bundle;\n\t},\n\n\tgenerateMap ( options ) {\n\t\tlet offsets = {};\n\n\t\tlet names = [];\n\t\tthis.sources.forEach( source => {\n\t\t\tObject.keys( source.content.storedNames ).forEach( name => {\n\t\t\t\tif ( !~names.indexOf( name ) ) names.push( name );\n\t\t\t});\n\t\t});\n\n\t\tconst encoded = (\n\t\t\tgetSemis( this.intro ) +\n\t\t\tthis.sources.map( ( source, i ) => {\n\t\t\t\tconst prefix = ( i > 0 ) ? ( getSemis( source.separator ) || ',' ) : '';\n\t\t\t\tlet mappings;\n\n\t\t\t\t// we don't bother encoding sources without a filename\n\t\t\t\tif ( !source.filename ) {\n\t\t\t\t\tmappings = getSemis( source.content.toString() );\n\t\t\t\t} else {\n\t\t\t\t\tconst sourceIndex = this.uniqueSourceIndexByFilename[ source.filename ];\n\t\t\t\t\tmappings = source.content.getMappings( options.hires, sourceIndex, offsets, names );\n\t\t\t\t}\n\n\t\t\t\treturn prefix + mappings;\n\t\t\t}).join( '' )\n\t\t);\n\n\t\treturn new SourceMap({\n\t\t\tfile: ( options.file ? options.file.split( /[\\/\\\\]/ ).pop() : null ),\n\t\t\tsources: this.uniqueSources.map( source => {\n\t\t\t\treturn options.file ? getRelativePath( options.file, source.filename ) : source.filename;\n\t\t\t}),\n\t\t\tsourcesContent: this.uniqueSources.map( source => {\n\t\t\t\treturn options.includeContent ? source.content : null;\n\t\t\t}),\n\t\t\tnames,\n\t\t\tmappings: encoded\n\t\t});\n\t},\n\n\tgetIndentString () {\n\t\tlet indentStringCounts = {};\n\n\t\tthis.sources.forEach( source => {\n\t\t\tconst indentStr = source.content.indentStr;\n\n\t\t\tif ( indentStr === null ) return;\n\n\t\t\tif ( !indentStringCounts[ indentStr ] ) indentStringCounts[ indentStr ] = 0;\n\t\t\tindentStringCounts[ indentStr ] += 1;\n\t\t});\n\n\t\treturn ( Object.keys( indentStringCounts ).sort( ( a, b ) => {\n\t\t\treturn indentStringCounts[a] - indentStringCounts[b];\n\t\t})[0] ) || '\\t';\n\t},\n\n\tindent ( indentStr ) {\n\t\tif ( !arguments.length ) {\n\t\t\tindentStr = this.getIndentString();\n\t\t}\n\n\t\tif ( indentStr === '' ) return this; // noop\n\n\t\tlet trailingNewline = !this.intro || this.intro.slice( -1 ) === '\\n';\n\n\t\tthis.sources.forEach( ( source, i ) => {\n\t\t\tconst separator = source.separator !== undefined ? source.separator : this.separator;\n\t\t\tconst indentStart = trailingNewline || ( i > 0 && /\\r?\\n$/.test( separator ) );\n\n\t\t\tsource.content.indent( indentStr, {\n\t\t\t\texclude: source.indentExclusionRanges,\n\t\t\t\tindentStart//: trailingNewline || /\\r?\\n$/.test( separator )  //true///\\r?\\n/.test( separator )\n\t\t\t});\n\n\t\t\t// TODO this is a very slow way to determine this\n\t\t\ttrailingNewline = source.content.toString().slice( 0, -1 ) === '\\n';\n\t\t});\n\n\t\tif ( this.intro ) {\n\t\t\tthis.intro = indentStr + this.intro.replace( /^[^\\n]/gm, ( match, index ) => {\n\t\t\t\treturn index > 0 ? indentStr + match : match;\n\t\t\t});\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tprepend ( str ) {\n\t\tthis.intro = str + this.intro;\n\t\treturn this;\n\t},\n\n\ttoString () {\n\t\tconst body = this.sources.map( ( source, i ) => {\n\t\t\tconst separator = source.separator !== undefined ? source.separator : this.separator;\n\t\t\tlet str = ( i > 0 ? separator : '' ) + source.content.toString();\n\n\t\t\treturn str;\n\t\t}).join( '' );\n\n\t\treturn this.intro + body;\n\t},\n\n\ttrimLines () {\n\t\treturn this.trim('[\\\\r\\\\n]');\n\t},\n\n\ttrim ( charType ) {\n\t\treturn this.trimStart( charType ).trimEnd( charType );\n\t},\n\n\ttrimStart ( charType ) {\n\t\tconst rx = new RegExp( '^' + ( charType || '\\\\s' ) + '+' );\n\t\tthis.intro = this.intro.replace( rx, '' );\n\n\t\tif ( !this.intro ) {\n\t\t\tlet source;\n\t\t\tlet i = 0;\n\n\t\t\tdo {\n\t\t\t\tsource = this.sources[i];\n\n\t\t\t\tif ( !source ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tsource.content.trimStart( charType );\n\t\t\t\ti += 1;\n\t\t\t} while ( source.content.toString() === '' ); // TODO faster way to determine non-empty source?\n\t\t}\n\n\t\treturn this;\n\t},\n\n\ttrimEnd ( charType ) {\n\t\tconst rx = new RegExp( ( charType || '\\\\s' ) + '+$' );\n\n\t\tlet source;\n\t\tlet i = this.sources.length - 1;\n\n\t\tdo {\n\t\t\tsource = this.sources[i];\n\n\t\t\tif ( !source ) {\n\t\t\t\tthis.intro = this.intro.replace( rx, '' );\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tsource.content.trimEnd( charType );\n\t\t\ti -= 1;\n\t\t} while ( source.content.toString() === '' ); // TODO faster way to determine non-empty source?\n\n\t\treturn this;\n\t}\n};\n\nfunction getSemis ( str ) {\n\treturn new Array( str.split( '\\n' ).length ).join( ';' );\n}\n","import MagicString from './MagicString.js';\nimport Bundle from './Bundle.js';\n\nMagicString.Bundle = Bundle;\n\nexport default MagicString;\n"],"names":["encode"],"mappings":"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"}